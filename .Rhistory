aes(x=z_order,y=zeta_value,color =year_month))+
geom_line(size=0.5)+
geom_point(size=4)+
theme_classic()+ ggtitle(i)+
xlab("Zeta order")+
ylab("Zeta diversity")+
theme(text = element_text(family = "serif"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size =16),
axis.title.x = element_text(size=22),
axis.title.y = element_text(size=22),
legend.title = element_text(size=22),
legend.text = element_text(size=20),
plot.title = element_text(size=24))+
scale_x_continuous(limits = c(0,25), breaks = seq(0,25, by = 5))+
scale_color_manual(values = color_op6[1:2],
name = "Year",
labels = c("PreS1","PostS1"))+
geom_line(data = null_1,
aes(x = z_order,y= mean_zeta_value),
color = "#bc201c",
linetype = "dashed",
size=0.5) +
geom_point(data = null_1,
aes(x = z_order,y= mean_zeta_value),
color = "#bc201c",
size=3,
shape = 17)+
geom_line(data = null_2,
aes(x = z_order,y= mean_zeta_value),
color = "#bc201c",
linetype = "dashed",
size=0.5) +
geom_point(data = null_2,
aes(x = z_order,y= mean_zeta_value),
color = "#bc201c",
size=3,
shape = 15)
save_plot <-paste(i,"_","null_zeta_decay.png")
save_plot_pdf <- paste(i,"_","null_zeta_decay.pdf")
ggsave(save_plot, width = 10, height = 5, dpi = 300,path = save_path)
ggsave(save_plot_pdf, width = 10, height = 5, dpi = 300,path = save_path)
}
ind_null_zeta_ratio<- ind_zeta_null
View(ind_null_zeta_ratio)
ind_null_zeta_ratio$zeta_ratio[ind_null_zeta_ratio$zeta_ratio == "NaN"]<-0
ind_null_zeta_ratio<-ind_null_zeta_ratio %>%
group_by(z_order,site) %>%
summarise(mean_zeta_ratio = mean(zeta_ratio))
ggplot(data =zeta_divesity_resident_short,
aes(x=z_order,y=zeta_ratio,color =year_month))+
geom_line(size=0.5)+
geom_point(size=4)+
theme_classic()+
xlab("Zeta order")+
ylab("Zeta ratio")+
theme(text = element_text(family = "serif"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size =16),
axis.title.x = element_text(size=22),
axis.title.y = element_text(size=22),
legend.title = element_text(size=22),
legend.text = element_text(size=20),
plot.title = element_text(size=24))+
scale_color_manual(values = color_op6[1:2],name = "Year",
labels = c("PreS1","PostS1"))+
geom_line(data = null_zeta_ratio,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_zeta_ratio,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape=15)+
geom_line(data = ind_null_zeta_ratio,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = ind_null_zeta_ratio,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape = 17)
View(zeta_divesity_resident_short)
for (i in unique(sites)) {
data <-zeta_divesity_resident_short %>% filter(Site == i )
null_1< -null_zeta_ratio %>% filter(site == i)
null_2 <- ind_null_zeta_ratio %>% filter(site == i)
ggplot(data =data,
aes(x=z_order,y=zeta_ratio,color =year_month))+
geom_line(size=0.5)+
geom_point(size=4)+
theme_classic()+ ggtitle(i)+
xlab("Zeta order")+
ylab("Zeta ratio")+
theme(text = element_text(family = "serif"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size =16),
axis.title.x = element_text(size=22),
axis.title.y = element_text(size=22),
legend.title = element_text(size=22),
legend.text = element_text(size=20),
plot.title = element_text(size=24))+
scale_color_manual(values = color_op6[1:2],name = "Year",
labels = c("PreS1","PostS1"))+
geom_line(data = null_1,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_1,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape=15)+
geom_line(data = null_2,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_2,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape = 17)
save_plot <-paste(i,"_","null_ratio.png")
save_plot_pdf <- paste(i,"_","null_ratio.pdf")
ggsave(save_plot, width = 10, height = 5, dpi = 300,path = save_path)
ggsave(save_plot_pdf, width = 10, height = 5, dpi = 300,path = save_path)
}
for (i in unique(sites)) {
data <-zeta_divesity_resident_short %>% filter(Site == i )
null_1< -null_zeta_ratio %>% filter(site == i)
null_2 <- ind_null_zeta_ratio %>% filter(site == i)
ggplot(data =data,
aes(x=z_order,y=zeta_ratio,color =year_month))+
geom_line(size=0.5)+
geom_point(size=4)+
theme_classic()+ ggtitle(i)+
xlab("Zeta order")+
ylab("Zeta ratio")+
theme(text = element_text(family = "serif"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size =16),
axis.title.x = element_text(size=22),
axis.title.y = element_text(size=22),
legend.title = element_text(size=22),
legend.text = element_text(size=20),
plot.title = element_text(size=24))+
scale_color_manual(values = color_op6[1:2],name = "Year",
labels = c("PreS1","PostS1"))+
geom_line(data = null_1,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_1,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape=15)+
geom_line(data = null_2,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_2,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape = 17)
save_plot <-paste(i,"_","null_ratio.png")
save_plot_pdf <- paste(i,"_","null_ratio.pdf")
ggsave(save_plot,
width = 10, height = 5, dpi = 300,
path = save_path)
ggsave(save_plot_pdf,
width = 10, height = 5, dpi = 300,
path = save_path)
}
data <-zeta_divesity_resident_short %>% filter(Site == i )
null_1< -null_zeta_ratio %>% filter(site == i)
for (i in unique(sites)) {
data <-zeta_divesity_resident_short %>% filter(Site == i )
null_1< -null_zeta_ratio %>% filter(Site == i)
null_2 <- ind_null_zeta_ratio %>% filter(site == i)
ggplot(data =data,
aes(x=z_order,y=zeta_ratio,color =year_month))+
geom_line(size=0.5)+
geom_point(size=4)+
theme_classic()+ ggtitle(i)+
xlab("Zeta order")+
ylab("Zeta ratio")+
theme(text = element_text(family = "serif"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size =16),
axis.title.x = element_text(size=22),
axis.title.y = element_text(size=22),
legend.title = element_text(size=22),
legend.text = element_text(size=20),
plot.title = element_text(size=24))+
scale_color_manual(values = color_op6[1:2],name = "Year",
labels = c("PreS1","PostS1"))+
geom_line(data = null_1,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_1,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape=15)+
geom_line(data = null_2,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_2,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape = 17)
save_plot <-paste(i,"_","null_ratio.png")
save_plot_pdf <- paste(i,"_","null_ratio.pdf")
ggsave(save_plot,
width = 10, height = 5, dpi = 300,
path = save_path)
ggsave(save_plot_pdf,
width = 10, height = 5, dpi = 300,
path = save_path)
}
data <-zeta_divesity_resident_short %>% filter(Site == i )
null_1< -null_zeta_ratio %>% filter(Site == i)
for (i in unique(sites)) {
data <-zeta_divesity_resident_short %>% filter(Site == i )
null_1<-null_zeta_ratio %>% filter(Site == i)
null_2 <- ind_null_zeta_ratio %>% filter(site == i)
ggplot(data =data,
aes(x=z_order,y=zeta_ratio,color =year_month))+
geom_line(size=0.5)+
geom_point(size=4)+
theme_classic()+ ggtitle(i)+
xlab("Zeta order")+
ylab("Zeta ratio")+
theme(text = element_text(family = "serif"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size =16),
axis.title.x = element_text(size=22),
axis.title.y = element_text(size=22),
legend.title = element_text(size=22),
legend.text = element_text(size=20),
plot.title = element_text(size=24))+
scale_color_manual(values = color_op6[1:2],name = "Year",
labels = c("PreS1","PostS1"))+
geom_line(data = null_1,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_1,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape=15)+
geom_line(data = null_2,
aes(x = z_order,y= mean_zeta_ratio),
linetype = "dashed",
color = "#bc201c",
size=0.5)+
geom_point(data = null_2,
aes(x = z_order,y= mean_zeta_ratio),
color = "#bc201c",
size=3,
shape = 17)
save_plot <-paste(i,"_","null_ratio.png")
save_plot_pdf <- paste(i,"_","null_ratio.pdf")
ggsave(save_plot,
width = 10, height = 5, dpi = 300,
path = save_path)
ggsave(save_plot_pdf,
width = 10, height = 5, dpi = 300,
path = save_path)
}
zeta_divesity_resident_short<-zeta_divesity_resident %>%
filter(year_month %in% c("2020 a","2018 b"))
sites<-unique(zeta_divesity_resident_short$Site)
for (i in unique(sites)) {
real_data <-zeta_divesity_resident_short  %>%
filter(Site ==i)
null_1<- ind_null_zeta_decay %>% filter(site == i)
null_2<- null_zeta_decay %>% filter(Site == i)
ggplot(data =real_data,
aes(x=z_order,y=zeta_value,color =year_month))+
geom_line(size=0.5)+
geom_point(size=4)+
theme_classic()+ ggtitle(i)+
xlab("Zeta order")+
ylab("Zeta diversity")+
theme(text = element_text(family = "serif"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size =16),
axis.title.x = element_text(size=22),
axis.title.y = element_text(size=22),
legend.title = element_text(size=22),
legend.text = element_text(size=20),
plot.title = element_text(size=24))+
scale_x_continuous(limits = c(0,16), breaks = seq(0,16, by = 4))+
scale_color_manual(values = color_op6[1:2],
name = "Year",
labels = c("PreS1","PostS1"))+
geom_line(data = null_1,
aes(x = z_order,y= mean_zeta_value),
color = "#bc201c",
linetype = "dashed",
size=0.5) +
geom_point(data = null_1,
aes(x = z_order,y= mean_zeta_value),
color = "#bc201c",
size=3,
shape = 17)+
geom_line(data = null_2,
aes(x = z_order,y= mean_zeta_value),
color = "#bc201c",
linetype = "dashed",
size=0.5) +
geom_point(data = null_2,
aes(x = z_order,y= mean_zeta_value),
color = "#bc201c",
size=3,
shape = 15)
save_plot <-paste(i,"_","null_zeta_decay.png")
save_plot_pdf <- paste(i,"_","null_zeta_decay.pdf")
ggsave(save_plot, width = 10, height = 5, dpi = 300,path = save_path)
ggsave(save_plot_pdf, width = 10, height = 5, dpi = 300,path = save_path)
}
load("fish_full_data.rdata")
View(fish_full_data)
library(tidyverse)
library(ggplot2)
library(stringr)
library(Hmisc)
library(rfishbase)
library(lubridate)
select <- dplyr::select
rename <-dplyr::rename
data_2015<-read.csv("raw data to use\\Fish_2015.csv")
data_2016<-read.csv("raw data to use\\Fish data 2016.csv")
data_2017<-read.csv("raw data to use\\Fish data 2017.csv")
data_2018<-read.csv("raw data to use\\2018 raw.csv")
data_2020_june<-read.csv("raw data to use\\complete data knolls june 2020.csv")
data_2020_oct<-read.csv("raw data to use\\EcoCamp October 2020 - Data after fixes.csv")
data_2021_june<-read.csv("raw data to use\\EcoCamp June 2021 updated.csv")
knoll_mdata<-read.csv("raw data to use\\knoll_meta_data_until_2020_edited.csv")
knoll_data_2020<-read.csv("raw data to use\\knoll_data_2020.csv")
species_spp<-read.csv("raw data to use\\species_spp_full.csv")# family names for spp. species
species_status<-read.csv("raw data to use\\species_list_2020.csv") # transient/cryptic species
#summary(data_2015)
data_2015_cleaned = data_2015 %>%
mutate(Year = "2015",Date = dmy(Date)) %>%
rename(Length = Length_cm, Abundance = Number_Ind) %>%
select(Site,Knoll,Year,Date,Observer,Species,Abundance,Length)
data_2015_cleaned$Confidence<-rep(NA)
#summary(data_2016)
data_2016 = data_2016[,1:7]
data_2016_cleaned = data_2016 %>%
mutate(Year = "2016",Date = dmy(date)) %>%
rename(Abundance = Number_Ind) %>%
select(Site,Knoll,Year,Date,Observer,Species,Abundance,Length)
data_2016_cleaned$Confidence <-NA
#summary(data_2017)
#observer by name, not left/right
data_2017$Left.observer = as.character(data_2017$Left.observer)
data_2017$Right.observer = as.character(data_2017$Right.observer)
data_2017$Observer = ifelse(data_2017$Direction == "Left",
data_2017$Left.observer,
data_2017$Right.observer)
data_2017_cleaned = data_2017 %>%
mutate(Year = "2017",Date = dmy(Trip.date)) %>%
rename(Knoll = SiteNo, Site = Location, Abundance = Number_Ind) %>%
select(Site,Knoll,Year,Date,Observer,Species,Abundance,Length)
data_2017_cleaned$Confidence <-NA
#colnames(data_2018)
#observer by name, not left/right
data_2018$Observer = ifelse(data_2018$Direction == "Left",
data_2018$Left.observer,
data_2018$Right.observer)
#rename some columns
data_2018<-data_2018 %>% rename(Knoll = SiteNo, Site = Location,Abundance = Number_Ind,Confidence = Distance)
data_2018$Site[data_2018$Site=="Reserve"]<-"NR"
data_2018_cleaned = data_2018 %>%
mutate(Year = "2018", Date = ymd(Trip.date)) %>%
select(Site,Knoll,Year,Date,Observer,Species,Abundance,Length,Confidence)
#remove unexperienced observers
unique(data_2018_cleaned$Observer)
data_2018_cleaned = data_2018_cleaned %>%
filter(Observer != "Liron Kraushar")
data_2018_cleaned$Knoll[data_2018_cleaned$Knoll=="TAMAR"]<-"Tamar"
data_2018_cleaned$Confidence[is.na(data_2018_cleaned$Confidence)]<-0
#summary(data_2020_june)
#colnames(data_2020_june)
data_2020_june$Observer = ifelse(data_2020_june$Observer == "first",
data_2020_june$First.Observer,
data_2020_june$Second.Observer)
data_2020_june_cleaned = data_2020_june %>%
rename(Site = Location, Abundance = Amount) %>%
mutate(Date = ymd_hms(Date),Year = year(Date)) %>%
select(Site,Knoll,Year,Date,Observer,Species, Abundance, Length,Confidence)
data_2020_june_cleaned$Site = as.character(data_2020_june_cleaned$Site)
data_2020_june_cleaned$Year = as.character(data_2020_june_cleaned$Year)
data_2020_june_cleaned$Site[data_2020_june_cleaned$Site == "Nature Reserve"] = "NR"
data_2020_june_cleaned$Confidence[is.na(data_2020_june_cleaned$Confidence)]<-0
#summary(data_2020_oct)
#colnames(data_2020_oct)
data_2020_oct$Observer = ifelse(data_2020_oct$Observer == "first",
data_2020_oct$First.Observer.x,
data_2020_oct$Second.Observer.x)
data_2020_oct_cleaned = data_2020_oct %>%
rename(Site = Location, Abundance = Amount) %>%
mutate(Date = ymd_hms(Date),Year = year(Date)) %>%
select(Site,Knoll,Year,Date,Observer,Species, Abundance, Length,Confidence)
data_2020_oct_cleaned$Site = as.character(data_2020_oct_cleaned$Site)
data_2020_oct_cleaned$Year = as.character(data_2020_oct_cleaned$Year)
data_2020_oct_cleaned$Site[data_2020_oct_cleaned$Site == "Reserve"] = "NR"
data_2020_oct_cleaned$Site[data_2020_oct_cleaned$Site == ""] = "North beach"
data_2020_oct_cleaned$Knoll[data_2020_oct_cleaned$Site == "Tamar"] = "Tamar"
data_2020_oct_cleaned$Site[data_2020_oct_cleaned$Site == "Tamar"] = "NR"
data_2020_oct_cleaned$Confidence[is.na(data_2020_oct_cleaned$Confidence)]<-0
#summary(data_2021_june)
#colnames(data_2021_june)
data_2021_june$Observer = ifelse(data_2021_june$Observer == "first",
data_2021_june$First.Observer.x,
data_2021_june$Second.Observer.x)
data_2021_june_cleaned = data_2021_june %>%
rename(Site = Location, Abundance = Amount) %>%
mutate(Date = ymd_hms(Date),Year = year(Date)) %>%
select(Site,Knoll,Year,Date,Observer,Species, Abundance, Length,Confidence)
data_2021_june_cleaned$Site = as.character(data_2021_june_cleaned$Site)
data_2021_june_cleaned$Year = as.character(data_2021_june_cleaned$Year)
data_2021_june_cleaned$Site[data_2021_june_cleaned$Site == "Reserve"] = "NR"
data_2021_june_cleaned<-data_2021_june_cleaned %>% drop_na(Knoll)
data_2021_june_cleaned$Confidence[is.na(data_2021_june_cleaned$Confidence)]<-0
fish_full_data = rbind.data.frame(data_2015_cleaned,data_2016_cleaned,data_2017_cleaned,data_2018_cleaned,data_2020_june_cleaned,data_2020_oct_cleaned,data_2021_june_cleaned)
names<-data_frame("name" = unique(fish_full_data$Observer))
fish_full_data$Observer[fish_full_data$Observer== "Chaikin Shahar"]<-"Shahar Chaikin"
fish_full_data$Observer[fish_full_data$Observer== "Corrine Jacobs"]<-"Corrine Avidan"
fish_full_data$Observer[fish_full_data$Observer== "Hagar Yancovitch"]<-"Hagar yancovitch shalom"
fish_full_data$Observer[fish_full_data$Observer== "Hava Wendel"]<-"Hava Wandel"
fish_full_data$Observer[fish_full_data$Observer== "Itay Granot"]<-"Itai Granot"
fish_full_data$Observer[fish_full_data$Observer== "Noa moshkowitz"]<-"Noa Moshkowitz"
fish_full_data$Observer[fish_full_data$Observer== "Tal Gavrely"]<-"Tal Gavriel"
fish_full_data$Observer[fish_full_data$Observer== "Tal Gavrieli"]<-"Tal Gavriel"
fish_full_data$Observer[fish_full_data$Observer== "Tal Gavriely"]<-"Tal Gavriel"
fish_full_data$Observer[fish_full_data$Observer== "Liron Kraushar‏"]<-"Liron Kraushar"
fish_full_data$Observer[fish_full_data$Observer== "Liraz Levy"]<-"Liraz Levi"
names<-data_frame("name" = unique(fish_full_data$Observer))
rm(names)
fish_full_data$Site[fish_full_data$Site=="Kazza"]<-"Katza"
View(fish_full_data)
ms_writers<- fish_full_data %>% filter(Year %in% c(2020,2018))
View(ms_writers)
ms_writers<- fish_full_data %>% filter(Year %in% c(2020,2018)) %>% distinct(Observer)
View(ms_writers)
ms_writers<- fish_full_data %>% mutate("year_month"= paste(Year,month(Date),sep = "_"))
ms_writers<- fish_full_data %>% mutate("year_month"= paste(Year,month(Date),sep = "_")) %>% filter(year_month %in% c("2020_6","2018_9
")) %>%  distinct(Observer)
View(ms_writers)
write.csv(ms_writers,"ms_writers.csv")
ms_writers<- fish_full_data %>% mutate("year_month"= paste(Year,month(Date),sep = "_")) %>% filter(year_month %in% c("2020_6","2018_9"))
ms_writers<-ms_writers%>%  distinct(Observer)
write.csv(ms_writers,"ms_writers.csv")
load("fish_full_data.rdata")
load("survey_list.Rdata")
View(survey_list)
library(plotrix)
library(tidyverse)
load("fish_full_data.rdata")
load("coral_comm.rdata")
load("coral_cover.rdata")
breakage <- read.csv("data\\breakage 2020 - 2018.csv")
sp<- fish_full_data %>% distinct(Species,.keep_all = T) %>% select(Family,Species,Species_2015,Status)
View(sp)
library(plotrix)
library(tidyverse)
load("fish_full_data.rdata")
load("coral_comm.rdata")
load("coral_cover.rdata")
breakage <- read.csv("data\\breakage 2020 - 2018.csv")
save_path<-"G:\\My Drive\\PHD\\chapter 1 strom effect\\R Scripts\\plots for ms\\knoll_stat"
mean(coral_cover$Max_depth)
std.error(coral_cover$Max_depth)
var(coral_cover$Max_depth)
sd(coral_cover$Max_depth)
ggplot(data = coral_cover, aes(x= Site, y = Max_depth))+
geom_violin(fill = "#F1DCB8")+
stat_summary(fun.y=mean, geom="point",size=2)+
theme_classic()+ylab("Bottom depth (m)")+
theme(text = element_text(family = "serif"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size =16),
axis.title.x = element_text(size=22),
axis.title.y = element_text(size=22),
legend.title = element_text(size=22),
legend.text = element_text(size=20),
plot.title = element_text(size=24))
ggsave("depth_violin.pdf", width = 10, height = 5, dpi = 300,path = save_path)
ggsave("depth_violin.png", width = 10, height = 5, dpi = 300,path = save_path)
mean(coral_cover$Surface_Area)
update.packages(ask = FALSE)
